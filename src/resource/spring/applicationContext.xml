<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:task="http://www.springframework.org/schema/task"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
           http://www.springframework.org/schema/aop					
           http://www.springframework.org/schema/aop/spring-aop-2.5.xsd
           http://www.springframework.org/schema/context
           http://www.springframework.org/schema/context/spring-context-2.5.xsd
           http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.5.xsd http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.0.xsd">

    <!-- spring properties文件 -->
    <context:property-placeholder location="classpath:resource/database.properties"/>

    <!-- AOP 自动代理 	-->
    <aop:aspectj-autoproxy/>
    <!-- spring 使用annotation -->
    <context:annotation-config/>
    <task:annotation-driven/>
    <!--
     spring 扫描设置
    (Annotation方式配置services)enable component scanning (beware that this does not enable mapper scanning!)
    -->
    <context:component-scan base-package="cn"/>

    <bean id="dataSource" class="org.springframework.jndi.JndiObjectFactoryBean">
        <property name="jndiName">
            <value>${jdbc.jndi}</value>
        </property>
    </bean>
    <!-- 事务管理器 -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>
    <!-- 事务控制 -->
    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="get*" propagation="SUPPORTS" read-only="true"/>
            <tx:method name="do*"  rollback-for="Exception"/>
            <tx:method name="insert*"  rollback-for="Exception"/>
            <tx:method name="update*" propagation="REQUIRED"/>
            <tx:method name="delete*" propagation="REQUIRED"/>
        </tx:attributes>
    </tx:advice>

    <!-- 事务管理 -->
    <aop:config>
        <aop:pointcut id="jdbcServerMethod"
                      expression="execution(* *..service*..*(..))"/>
        <aop:advisor advice-ref="txAdvice" pointcut-ref="jdbcServerMethod"/>
    </aop:config>


    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!--<property name="dataSource" ref="dataSourceOracle"/>-->
        <!--<property name="mapperLocations" value="classpath*:com/tianbao/bms/dao/**/*.xml"/>-->
        <property name="dataSource" ref="dataSource"/>
        <property name="mapperLocations" value="classpath*:cn/*/dao/mapper/*.xml"/>
    </bean>

      <!-- scan for mappers and let them be autowired -->
        <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
            <!-- Mapper接口所在包名，Spring会自动查找其下的Mapper -->
            <property name="basePackage" value="cn.*.dao" />
        </bean>

    <bean class="base.listener.MyApplicationContextAware"></bean>
</beans>

