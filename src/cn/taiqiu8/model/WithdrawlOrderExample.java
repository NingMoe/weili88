package cn.taiqiu8.model;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class WithdrawlOrderExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table withdrawl_order
     *
     * @mbggenerated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table withdrawl_order
     *
     * @mbggenerated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table withdrawl_order
     *
     * @mbggenerated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table withdrawl_order
     *
     * @mbggenerated
     */
    public WithdrawlOrderExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table withdrawl_order
     *
     * @mbggenerated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table withdrawl_order
     *
     * @mbggenerated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table withdrawl_order
     *
     * @mbggenerated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table withdrawl_order
     *
     * @mbggenerated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table withdrawl_order
     *
     * @mbggenerated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table withdrawl_order
     *
     * @mbggenerated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table withdrawl_order
     *
     * @mbggenerated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table withdrawl_order
     *
     * @mbggenerated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table withdrawl_order
     *
     * @mbggenerated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table withdrawl_order
     *
     * @mbggenerated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table withdrawl_order
     *
     * @mbggenerated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Integer value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Integer value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Integer> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Integer> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andUserIdIsNull() {
            addCriterion("user_id is null");
            return (Criteria) this;
        }

        public Criteria andUserIdIsNotNull() {
            addCriterion("user_id is not null");
            return (Criteria) this;
        }

        public Criteria andUserIdEqualTo(Integer value) {
            addCriterion("user_id =", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdNotEqualTo(Integer value) {
            addCriterion("user_id <>", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdGreaterThan(Integer value) {
            addCriterion("user_id >", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("user_id >=", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdLessThan(Integer value) {
            addCriterion("user_id <", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdLessThanOrEqualTo(Integer value) {
            addCriterion("user_id <=", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdIn(List<Integer> values) {
            addCriterion("user_id in", values, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdNotIn(List<Integer> values) {
            addCriterion("user_id not in", values, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdBetween(Integer value1, Integer value2) {
            addCriterion("user_id between", value1, value2, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdNotBetween(Integer value1, Integer value2) {
            addCriterion("user_id not between", value1, value2, "userId");
            return (Criteria) this;
        }

        public Criteria andMoneyAccountIsNull() {
            addCriterion("money_account is null");
            return (Criteria) this;
        }

        public Criteria andMoneyAccountIsNotNull() {
            addCriterion("money_account is not null");
            return (Criteria) this;
        }

        public Criteria andMoneyAccountEqualTo(String value) {
            addCriterion("money_account =", value, "moneyAccount");
            return (Criteria) this;
        }

        public Criteria andMoneyAccountNotEqualTo(String value) {
            addCriterion("money_account <>", value, "moneyAccount");
            return (Criteria) this;
        }

        public Criteria andMoneyAccountGreaterThan(String value) {
            addCriterion("money_account >", value, "moneyAccount");
            return (Criteria) this;
        }

        public Criteria andMoneyAccountGreaterThanOrEqualTo(String value) {
            addCriterion("money_account >=", value, "moneyAccount");
            return (Criteria) this;
        }

        public Criteria andMoneyAccountLessThan(String value) {
            addCriterion("money_account <", value, "moneyAccount");
            return (Criteria) this;
        }

        public Criteria andMoneyAccountLessThanOrEqualTo(String value) {
            addCriterion("money_account <=", value, "moneyAccount");
            return (Criteria) this;
        }

        public Criteria andMoneyAccountLike(String value) {
            addCriterion("money_account like", value, "moneyAccount");
            return (Criteria) this;
        }

        public Criteria andMoneyAccountNotLike(String value) {
            addCriterion("money_account not like", value, "moneyAccount");
            return (Criteria) this;
        }

        public Criteria andMoneyAccountIn(List<String> values) {
            addCriterion("money_account in", values, "moneyAccount");
            return (Criteria) this;
        }

        public Criteria andMoneyAccountNotIn(List<String> values) {
            addCriterion("money_account not in", values, "moneyAccount");
            return (Criteria) this;
        }

        public Criteria andMoneyAccountBetween(String value1, String value2) {
            addCriterion("money_account between", value1, value2, "moneyAccount");
            return (Criteria) this;
        }

        public Criteria andMoneyAccountNotBetween(String value1, String value2) {
            addCriterion("money_account not between", value1, value2, "moneyAccount");
            return (Criteria) this;
        }

        public Criteria andAmountIsNull() {
            addCriterion("amount is null");
            return (Criteria) this;
        }

        public Criteria andAmountIsNotNull() {
            addCriterion("amount is not null");
            return (Criteria) this;
        }

        public Criteria andAmountEqualTo(Integer value) {
            addCriterion("amount =", value, "amount");
            return (Criteria) this;
        }

        public Criteria andAmountNotEqualTo(Integer value) {
            addCriterion("amount <>", value, "amount");
            return (Criteria) this;
        }

        public Criteria andAmountGreaterThan(Integer value) {
            addCriterion("amount >", value, "amount");
            return (Criteria) this;
        }

        public Criteria andAmountGreaterThanOrEqualTo(Integer value) {
            addCriterion("amount >=", value, "amount");
            return (Criteria) this;
        }

        public Criteria andAmountLessThan(Integer value) {
            addCriterion("amount <", value, "amount");
            return (Criteria) this;
        }

        public Criteria andAmountLessThanOrEqualTo(Integer value) {
            addCriterion("amount <=", value, "amount");
            return (Criteria) this;
        }

        public Criteria andAmountIn(List<Integer> values) {
            addCriterion("amount in", values, "amount");
            return (Criteria) this;
        }

        public Criteria andAmountNotIn(List<Integer> values) {
            addCriterion("amount not in", values, "amount");
            return (Criteria) this;
        }

        public Criteria andAmountBetween(Integer value1, Integer value2) {
            addCriterion("amount between", value1, value2, "amount");
            return (Criteria) this;
        }

        public Criteria andAmountNotBetween(Integer value1, Integer value2) {
            addCriterion("amount not between", value1, value2, "amount");
            return (Criteria) this;
        }

        public Criteria andFeeIsNull() {
            addCriterion("fee is null");
            return (Criteria) this;
        }

        public Criteria andFeeIsNotNull() {
            addCriterion("fee is not null");
            return (Criteria) this;
        }

        public Criteria andFeeEqualTo(Integer value) {
            addCriterion("fee =", value, "fee");
            return (Criteria) this;
        }

        public Criteria andFeeNotEqualTo(Integer value) {
            addCriterion("fee <>", value, "fee");
            return (Criteria) this;
        }

        public Criteria andFeeGreaterThan(Integer value) {
            addCriterion("fee >", value, "fee");
            return (Criteria) this;
        }

        public Criteria andFeeGreaterThanOrEqualTo(Integer value) {
            addCriterion("fee >=", value, "fee");
            return (Criteria) this;
        }

        public Criteria andFeeLessThan(Integer value) {
            addCriterion("fee <", value, "fee");
            return (Criteria) this;
        }

        public Criteria andFeeLessThanOrEqualTo(Integer value) {
            addCriterion("fee <=", value, "fee");
            return (Criteria) this;
        }

        public Criteria andFeeIn(List<Integer> values) {
            addCriterion("fee in", values, "fee");
            return (Criteria) this;
        }

        public Criteria andFeeNotIn(List<Integer> values) {
            addCriterion("fee not in", values, "fee");
            return (Criteria) this;
        }

        public Criteria andFeeBetween(Integer value1, Integer value2) {
            addCriterion("fee between", value1, value2, "fee");
            return (Criteria) this;
        }

        public Criteria andFeeNotBetween(Integer value1, Integer value2) {
            addCriterion("fee not between", value1, value2, "fee");
            return (Criteria) this;
        }

        public Criteria andAmountTaxBeforeIsNull() {
            addCriterion("amount_tax_before is null");
            return (Criteria) this;
        }

        public Criteria andAmountTaxBeforeIsNotNull() {
            addCriterion("amount_tax_before is not null");
            return (Criteria) this;
        }

        public Criteria andAmountTaxBeforeEqualTo(Integer value) {
            addCriterion("amount_tax_before =", value, "amountTaxBefore");
            return (Criteria) this;
        }

        public Criteria andAmountTaxBeforeNotEqualTo(Integer value) {
            addCriterion("amount_tax_before <>", value, "amountTaxBefore");
            return (Criteria) this;
        }

        public Criteria andAmountTaxBeforeGreaterThan(Integer value) {
            addCriterion("amount_tax_before >", value, "amountTaxBefore");
            return (Criteria) this;
        }

        public Criteria andAmountTaxBeforeGreaterThanOrEqualTo(Integer value) {
            addCriterion("amount_tax_before >=", value, "amountTaxBefore");
            return (Criteria) this;
        }

        public Criteria andAmountTaxBeforeLessThan(Integer value) {
            addCriterion("amount_tax_before <", value, "amountTaxBefore");
            return (Criteria) this;
        }

        public Criteria andAmountTaxBeforeLessThanOrEqualTo(Integer value) {
            addCriterion("amount_tax_before <=", value, "amountTaxBefore");
            return (Criteria) this;
        }

        public Criteria andAmountTaxBeforeIn(List<Integer> values) {
            addCriterion("amount_tax_before in", values, "amountTaxBefore");
            return (Criteria) this;
        }

        public Criteria andAmountTaxBeforeNotIn(List<Integer> values) {
            addCriterion("amount_tax_before not in", values, "amountTaxBefore");
            return (Criteria) this;
        }

        public Criteria andAmountTaxBeforeBetween(Integer value1, Integer value2) {
            addCriterion("amount_tax_before between", value1, value2, "amountTaxBefore");
            return (Criteria) this;
        }

        public Criteria andAmountTaxBeforeNotBetween(Integer value1, Integer value2) {
            addCriterion("amount_tax_before not between", value1, value2, "amountTaxBefore");
            return (Criteria) this;
        }

        public Criteria andAmountTaxAfterIsNull() {
            addCriterion("amount_tax_after is null");
            return (Criteria) this;
        }

        public Criteria andAmountTaxAfterIsNotNull() {
            addCriterion("amount_tax_after is not null");
            return (Criteria) this;
        }

        public Criteria andAmountTaxAfterEqualTo(Integer value) {
            addCriterion("amount_tax_after =", value, "amountTaxAfter");
            return (Criteria) this;
        }

        public Criteria andAmountTaxAfterNotEqualTo(Integer value) {
            addCriterion("amount_tax_after <>", value, "amountTaxAfter");
            return (Criteria) this;
        }

        public Criteria andAmountTaxAfterGreaterThan(Integer value) {
            addCriterion("amount_tax_after >", value, "amountTaxAfter");
            return (Criteria) this;
        }

        public Criteria andAmountTaxAfterGreaterThanOrEqualTo(Integer value) {
            addCriterion("amount_tax_after >=", value, "amountTaxAfter");
            return (Criteria) this;
        }

        public Criteria andAmountTaxAfterLessThan(Integer value) {
            addCriterion("amount_tax_after <", value, "amountTaxAfter");
            return (Criteria) this;
        }

        public Criteria andAmountTaxAfterLessThanOrEqualTo(Integer value) {
            addCriterion("amount_tax_after <=", value, "amountTaxAfter");
            return (Criteria) this;
        }

        public Criteria andAmountTaxAfterIn(List<Integer> values) {
            addCriterion("amount_tax_after in", values, "amountTaxAfter");
            return (Criteria) this;
        }

        public Criteria andAmountTaxAfterNotIn(List<Integer> values) {
            addCriterion("amount_tax_after not in", values, "amountTaxAfter");
            return (Criteria) this;
        }

        public Criteria andAmountTaxAfterBetween(Integer value1, Integer value2) {
            addCriterion("amount_tax_after between", value1, value2, "amountTaxAfter");
            return (Criteria) this;
        }

        public Criteria andAmountTaxAfterNotBetween(Integer value1, Integer value2) {
            addCriterion("amount_tax_after not between", value1, value2, "amountTaxAfter");
            return (Criteria) this;
        }

        public Criteria andMoneyBeforeIsNull() {
            addCriterion("money_before is null");
            return (Criteria) this;
        }

        public Criteria andMoneyBeforeIsNotNull() {
            addCriterion("money_before is not null");
            return (Criteria) this;
        }

        public Criteria andMoneyBeforeEqualTo(Integer value) {
            addCriterion("money_before =", value, "moneyBefore");
            return (Criteria) this;
        }

        public Criteria andMoneyBeforeNotEqualTo(Integer value) {
            addCriterion("money_before <>", value, "moneyBefore");
            return (Criteria) this;
        }

        public Criteria andMoneyBeforeGreaterThan(Integer value) {
            addCriterion("money_before >", value, "moneyBefore");
            return (Criteria) this;
        }

        public Criteria andMoneyBeforeGreaterThanOrEqualTo(Integer value) {
            addCriterion("money_before >=", value, "moneyBefore");
            return (Criteria) this;
        }

        public Criteria andMoneyBeforeLessThan(Integer value) {
            addCriterion("money_before <", value, "moneyBefore");
            return (Criteria) this;
        }

        public Criteria andMoneyBeforeLessThanOrEqualTo(Integer value) {
            addCriterion("money_before <=", value, "moneyBefore");
            return (Criteria) this;
        }

        public Criteria andMoneyBeforeIn(List<Integer> values) {
            addCriterion("money_before in", values, "moneyBefore");
            return (Criteria) this;
        }

        public Criteria andMoneyBeforeNotIn(List<Integer> values) {
            addCriterion("money_before not in", values, "moneyBefore");
            return (Criteria) this;
        }

        public Criteria andMoneyBeforeBetween(Integer value1, Integer value2) {
            addCriterion("money_before between", value1, value2, "moneyBefore");
            return (Criteria) this;
        }

        public Criteria andMoneyBeforeNotBetween(Integer value1, Integer value2) {
            addCriterion("money_before not between", value1, value2, "moneyBefore");
            return (Criteria) this;
        }

        public Criteria andMoneyAfterIsNull() {
            addCriterion("money_after is null");
            return (Criteria) this;
        }

        public Criteria andMoneyAfterIsNotNull() {
            addCriterion("money_after is not null");
            return (Criteria) this;
        }

        public Criteria andMoneyAfterEqualTo(Integer value) {
            addCriterion("money_after =", value, "moneyAfter");
            return (Criteria) this;
        }

        public Criteria andMoneyAfterNotEqualTo(Integer value) {
            addCriterion("money_after <>", value, "moneyAfter");
            return (Criteria) this;
        }

        public Criteria andMoneyAfterGreaterThan(Integer value) {
            addCriterion("money_after >", value, "moneyAfter");
            return (Criteria) this;
        }

        public Criteria andMoneyAfterGreaterThanOrEqualTo(Integer value) {
            addCriterion("money_after >=", value, "moneyAfter");
            return (Criteria) this;
        }

        public Criteria andMoneyAfterLessThan(Integer value) {
            addCriterion("money_after <", value, "moneyAfter");
            return (Criteria) this;
        }

        public Criteria andMoneyAfterLessThanOrEqualTo(Integer value) {
            addCriterion("money_after <=", value, "moneyAfter");
            return (Criteria) this;
        }

        public Criteria andMoneyAfterIn(List<Integer> values) {
            addCriterion("money_after in", values, "moneyAfter");
            return (Criteria) this;
        }

        public Criteria andMoneyAfterNotIn(List<Integer> values) {
            addCriterion("money_after not in", values, "moneyAfter");
            return (Criteria) this;
        }

        public Criteria andMoneyAfterBetween(Integer value1, Integer value2) {
            addCriterion("money_after between", value1, value2, "moneyAfter");
            return (Criteria) this;
        }

        public Criteria andMoneyAfterNotBetween(Integer value1, Integer value2) {
            addCriterion("money_after not between", value1, value2, "moneyAfter");
            return (Criteria) this;
        }

        public Criteria andStatusIsNull() {
            addCriterion("status is null");
            return (Criteria) this;
        }

        public Criteria andStatusIsNotNull() {
            addCriterion("status is not null");
            return (Criteria) this;
        }

        public Criteria andStatusEqualTo(Short value) {
            addCriterion("status =", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusNotEqualTo(Short value) {
            addCriterion("status <>", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusGreaterThan(Short value) {
            addCriterion("status >", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusGreaterThanOrEqualTo(Short value) {
            addCriterion("status >=", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusLessThan(Short value) {
            addCriterion("status <", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusLessThanOrEqualTo(Short value) {
            addCriterion("status <=", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusIn(List<Short> values) {
            addCriterion("status in", values, "status");
            return (Criteria) this;
        }

        public Criteria andStatusNotIn(List<Short> values) {
            addCriterion("status not in", values, "status");
            return (Criteria) this;
        }

        public Criteria andStatusBetween(Short value1, Short value2) {
            addCriterion("status between", value1, value2, "status");
            return (Criteria) this;
        }

        public Criteria andStatusNotBetween(Short value1, Short value2) {
            addCriterion("status not between", value1, value2, "status");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIsNull() {
            addCriterion("create_time is null");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIsNotNull() {
            addCriterion("create_time is not null");
            return (Criteria) this;
        }

        public Criteria andCreateTimeEqualTo(Date value) {
            addCriterion("create_time =", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotEqualTo(Date value) {
            addCriterion("create_time <>", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeGreaterThan(Date value) {
            addCriterion("create_time >", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeGreaterThanOrEqualTo(Date value) {
            addCriterion("create_time >=", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeLessThan(Date value) {
            addCriterion("create_time <", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeLessThanOrEqualTo(Date value) {
            addCriterion("create_time <=", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIn(List<Date> values) {
            addCriterion("create_time in", values, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotIn(List<Date> values) {
            addCriterion("create_time not in", values, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeBetween(Date value1, Date value2) {
            addCriterion("create_time between", value1, value2, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotBetween(Date value1, Date value2) {
            addCriterion("create_time not between", value1, value2, "createTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeIsNull() {
            addCriterion("update_time is null");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeIsNotNull() {
            addCriterion("update_time is not null");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeEqualTo(Date value) {
            addCriterion("update_time =", value, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeNotEqualTo(Date value) {
            addCriterion("update_time <>", value, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeGreaterThan(Date value) {
            addCriterion("update_time >", value, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeGreaterThanOrEqualTo(Date value) {
            addCriterion("update_time >=", value, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeLessThan(Date value) {
            addCriterion("update_time <", value, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeLessThanOrEqualTo(Date value) {
            addCriterion("update_time <=", value, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeIn(List<Date> values) {
            addCriterion("update_time in", values, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeNotIn(List<Date> values) {
            addCriterion("update_time not in", values, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeBetween(Date value1, Date value2) {
            addCriterion("update_time between", value1, value2, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeNotBetween(Date value1, Date value2) {
            addCriterion("update_time not between", value1, value2, "updateTime");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table withdrawl_order
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table withdrawl_order
     *
     * @mbggenerated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}