<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.taiqiu8.dao.WithdrawlOrderMapper" >
  <resultMap id="BaseResultMap" type="cn.taiqiu8.model.WithdrawlOrder" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <constructor >
      <idArg column="id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="user_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="money_account" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="amount" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="fee" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="amount_tax_before" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="amount_tax_after" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="money_before" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="money_after" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="status" jdbcType="SMALLINT" javaType="java.lang.Short" />
      <arg column="create_time" jdbcType="TIMESTAMP" javaType="java.util.Date" />
      <arg column="update_time" jdbcType="TIMESTAMP" javaType="java.util.Date" />
    </constructor>
  </resultMap>
  <sql id="Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, user_id, money_account, amount, fee, amount_tax_before, amount_tax_after, money_before, 
    money_after, status, create_time, update_time
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.taiqiu8.model.WithdrawlOrderExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from withdrawl_order
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from withdrawl_order
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from withdrawl_order
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.taiqiu8.model.WithdrawlOrderExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from withdrawl_order
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.taiqiu8.model.WithdrawlOrder" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into withdrawl_order (user_id, money_account, amount, 
      fee, amount_tax_before, amount_tax_after, 
      money_before, money_after, status, 
      create_time, update_time)
    values (#{userId,jdbcType=INTEGER}, #{moneyAccount,jdbcType=VARCHAR}, #{amount,jdbcType=INTEGER}, 
      #{fee,jdbcType=INTEGER}, #{amountTaxBefore,jdbcType=INTEGER}, #{amountTaxAfter,jdbcType=INTEGER}, 
      #{moneyBefore,jdbcType=INTEGER}, #{moneyAfter,jdbcType=INTEGER}, #{status,jdbcType=SMALLINT}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="cn.taiqiu8.model.WithdrawlOrder" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into withdrawl_order
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        user_id,
      </if>
      <if test="moneyAccount != null" >
        money_account,
      </if>
      <if test="amount != null" >
        amount,
      </if>
      <if test="fee != null" >
        fee,
      </if>
      <if test="amountTaxBefore != null" >
        amount_tax_before,
      </if>
      <if test="amountTaxAfter != null" >
        amount_tax_after,
      </if>
      <if test="moneyBefore != null" >
        money_before,
      </if>
      <if test="moneyAfter != null" >
        money_after,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="moneyAccount != null" >
        #{moneyAccount,jdbcType=VARCHAR},
      </if>
      <if test="amount != null" >
        #{amount,jdbcType=INTEGER},
      </if>
      <if test="fee != null" >
        #{fee,jdbcType=INTEGER},
      </if>
      <if test="amountTaxBefore != null" >
        #{amountTaxBefore,jdbcType=INTEGER},
      </if>
      <if test="amountTaxAfter != null" >
        #{amountTaxAfter,jdbcType=INTEGER},
      </if>
      <if test="moneyBefore != null" >
        #{moneyBefore,jdbcType=INTEGER},
      </if>
      <if test="moneyAfter != null" >
        #{moneyAfter,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        #{status,jdbcType=SMALLINT},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.taiqiu8.model.WithdrawlOrderExample" resultType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from withdrawl_order
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update withdrawl_order
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.moneyAccount != null" >
        money_account = #{record.moneyAccount,jdbcType=VARCHAR},
      </if>
      <if test="record.amount != null" >
        amount = #{record.amount,jdbcType=INTEGER},
      </if>
      <if test="record.fee != null" >
        fee = #{record.fee,jdbcType=INTEGER},
      </if>
      <if test="record.amountTaxBefore != null" >
        amount_tax_before = #{record.amountTaxBefore,jdbcType=INTEGER},
      </if>
      <if test="record.amountTaxAfter != null" >
        amount_tax_after = #{record.amountTaxAfter,jdbcType=INTEGER},
      </if>
      <if test="record.moneyBefore != null" >
        money_before = #{record.moneyBefore,jdbcType=INTEGER},
      </if>
      <if test="record.moneyAfter != null" >
        money_after = #{record.moneyAfter,jdbcType=INTEGER},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=SMALLINT},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null" >
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update withdrawl_order
    set id = #{record.id,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      money_account = #{record.moneyAccount,jdbcType=VARCHAR},
      amount = #{record.amount,jdbcType=INTEGER},
      fee = #{record.fee,jdbcType=INTEGER},
      amount_tax_before = #{record.amountTaxBefore,jdbcType=INTEGER},
      amount_tax_after = #{record.amountTaxAfter,jdbcType=INTEGER},
      money_before = #{record.moneyBefore,jdbcType=INTEGER},
      money_after = #{record.moneyAfter,jdbcType=INTEGER},
      status = #{record.status,jdbcType=SMALLINT},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.taiqiu8.model.WithdrawlOrder" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update withdrawl_order
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="moneyAccount != null" >
        money_account = #{moneyAccount,jdbcType=VARCHAR},
      </if>
      <if test="amount != null" >
        amount = #{amount,jdbcType=INTEGER},
      </if>
      <if test="fee != null" >
        fee = #{fee,jdbcType=INTEGER},
      </if>
      <if test="amountTaxBefore != null" >
        amount_tax_before = #{amountTaxBefore,jdbcType=INTEGER},
      </if>
      <if test="amountTaxAfter != null" >
        amount_tax_after = #{amountTaxAfter,jdbcType=INTEGER},
      </if>
      <if test="moneyBefore != null" >
        money_before = #{moneyBefore,jdbcType=INTEGER},
      </if>
      <if test="moneyAfter != null" >
        money_after = #{moneyAfter,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=SMALLINT},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.taiqiu8.model.WithdrawlOrder" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update withdrawl_order
    set user_id = #{userId,jdbcType=INTEGER},
      money_account = #{moneyAccount,jdbcType=VARCHAR},
      amount = #{amount,jdbcType=INTEGER},
      fee = #{fee,jdbcType=INTEGER},
      amount_tax_before = #{amountTaxBefore,jdbcType=INTEGER},
      amount_tax_after = #{amountTaxAfter,jdbcType=INTEGER},
      money_before = #{moneyBefore,jdbcType=INTEGER},
      money_after = #{moneyAfter,jdbcType=INTEGER},
      status = #{status,jdbcType=SMALLINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>